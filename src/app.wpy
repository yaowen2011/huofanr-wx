<style lang="sass" src="static/sass/index.sass">
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import 'promise-polyfill'
import CONFIG from 'js/config'
import Token from 'js/token'

const token = new Token()

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index/index',
      'pages/index/search',
      'pages/index/limit-pay',
      'pages/category/index',
      'pages/profile/index',
      'pages/profile/address',
      'pages/profile/auth',
      'pages/profile/point',
      'pages/profile/uploadIDCard',
      'pages/cart/index',
      'pages/cart/pay',
      'pages/cart/pay-success',
      'pages/order/index',
      'pages/order/express',
      'pages/order/detail',
      'pages/goods/index',
      'pages/register/index',
      'pages/coupon/coupon',
      'pages/coupon/get-coupon',
      'pages/coupon/select-coupon',
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '活范儿',
      navigationBarTextStyle: 'black',
    },
    tabBar: {
      backgroundColor: '#fff',
      color: '#333',
      selectedColor: '#3bf1f7',
      list: [
        {
          pagePath: 'pages/index/index',
          text: '首页',
          iconPath: 'static/imgs/home-icon.png',
          selectedIconPath: 'static/imgs/home-active.png',
        },
        {
          pagePath: 'pages/category/index',
          text: '分类',
          // iconPath: 'static/imgs/category-icon.png',
          iconPath: 'static/imgs/category-active.png',
          selectedIconPath: 'static/imgs/category-active.png',
        },
        {
          pagePath: 'pages/cart/index',
          text: '购物车',
          iconPath: 'static/imgs/cart-icon.png',
          selectedIconPath: 'static/imgs/cart-active.png',
        },
        {
          pagePath: 'pages/profile/index',
          text: '我的',
          iconPath: 'static/imgs/profile-icon.png',
          selectedIconPath: 'static/imgs/profile-active.png',
        },
      ]
    },
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
    this.intercept('request', {
      config(params) {
        wepy.showNavigationBarLoading()
        if (typeof params === 'string') params = {url: params}
        if (params.url.indexOf('https://') < 0) {
          params.url = CONFIG.baseUrl + params.url
        }
        const token = wepy.getStorageSync('token')
        const session_id = wepy.getStorageSync('session_id')
        params.header = {token, session_id}
        return params
      },
      success(res) {
        const statusCode = res.statusCode.toString()
        if (statusCode === '200') {
          if (res.data.code === 200) return res.data.data
          else if (res.data.code === 403) this._redirectToRegister()
          return this._processError(res.data.msg)
        } else if (statusCode === '401') {
          this._redirectToRegister()
        } else {
          return this._processError()
        }
      },
      fail(error) {
        return this._processError(error)
      },
      complete() {
        wepy.hideNavigationBarLoading()
      },
    })
  }

  _processError(err = '网络错误，请重试') {
    wepy.showToast({
      title: err,
      image: '/static/imgs/error-icon.png',
    })
    return Promise.reject(err)
  }

  _redirectToRegister() {
    wepy.removeStorageSync('token')
    let route = ''
    const currentPage = this.$wxapp.getCurrentPage()
    if (currentPage) {
      route = this.$wxapp.getCurrentPage().__route__ || this.$wxapp.getCurrentPage().route || ''
      const options = this.$wxapp.getCurrentPage().options
      if (Object.keys(options).length) wepy.setStorageSync('redirectParams', options)
    }
    route = route ? '/' + route : ''
    wepy.redirectTo({
      url: '/pages/register/index?backUrl=' + route,
    })
  }

  onLaunch() {
    token.verifyToken()
  }
}
</script>
